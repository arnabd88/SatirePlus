
(set-logic QF_NRA)

(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(assert (and (>= x1 (/ 1.0 100.0)) (<= x1 1.0)))
(assert (and (>= x2 (/ 1.0 100.0)) (<= x2 1.0)))
(assert (and (>= x3 (/ 1.0 100.0)) (<= x3 1.0)))
(assert (and (>= x4 (/ 1.0 100.0)) (<= x4 1.0)))
(assert (> (^ x3 2.0) (/ 12499999999999997.0 50000000000000000.0)))
(assert (> (- x1 x2) (/ 39999999999999997.0 100000000000000000.0)))
(assert (< (- x1 x2) (/ 4000000000000001.0 10000000000000000.0)))
(assert (let ((a!1 (- (* x4 (+ x3 (/ x2 x1)))
              (/ 277555756156289.0 5000000000000000000000000000000.0))))
  (<= a!1 (+ (^ x1 2.0) (/ 27894353493707.0 2500000000000000000000000000.0)))))
(assert (let ((a!1 (+ (* x4 (+ x3 (/ x2 x1)))
              (/ 277555756156289.0 5000000000000000000000000000000.0))))
  (or (< (^ x3 2.0) (/ 12500000000000003.0 50000000000000000.0))
      (>= a!1
          (- (^ x1 2.0) (/ 27894353493707.0 2500000000000000000000000000.0))))))

(check-sat)
(get-model)
(exit)
