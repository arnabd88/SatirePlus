
#include <cstdio>
#include <iostream>
#include <unistd.h>
#include <cstdlib>
#include<cmath>
#include <quadmath.h>
#include <time.h>


#define _low -5.0
#define _high 5.0

using namespace std ;

double _r_X ;
double _r_Y ;

template<class T>
void init() 
{
	_r_X = _low + static_cast<T> (rand())/(static_cast<T>(RAND_MAX/(_high - _low))) ;
	_r_Y = _low + static_cast<T> (rand())/(static_cast<T>(RAND_MAX/(_high - _low))) ;
}

template<class T>
T execute_spec_precision()
{

	T r_X = (T) _r_X;
	T r_Y = (T) _r_Y;

	T r_E = (4503599627370497.0 / 10141204801825835211973625643008.0) ;

	T res ;

	if (r_Y <= -1*r_E ) {
		if (r_X <= -1*(r_E)) {
			res = ((((T)-6766907038823601.0) / (T)72057594037927936.0) + ((((T)2820352245043009.0 / (T)9007199254740992.0) * r_X) + ((((T)3707903645206677.0 / (T)18014398509481984.0) * (r_X * r_X)) + ((((T)2572698220669995.0 / (T)2305843009213693952.0) * r_Y) - ((((T)2964535887833201.0 / (T)576460752303423488.0) * (r_X * r_Y)) + ((((T)4386589623867947.0 / (T)1152921504606846976.0) * (r_X * (r_X * r_Y))) - ((((T)5230463601635901.0 / (T)9223372036854775808.0) * (r_Y * r_Y)) + (((T)5248024901994073.0 / (T)9223372036854775808.0) * (r_X * (r_Y * r_Y))))))))));
		} else {
			if (r_X > r_E) {
				res = ((((T)-2733486815430287.0) / (T)36028797018963968.0) - ((((T)5410228275555705.0 / (T)18014398509481984.0) * r_X) + ((((T)6073482399877813.0 / (T)36028797018963968.0) * (r_X * r_X)) + ((((T)1825705966316411.0 / (T)288230376151711744.0) * r_Y) - ((((T)2623922523119677.0 / (T)288230376151711744.0) * (r_X * r_Y)) + ((((T)7213138101422277.0 / (T)576460752303423488.0) * (r_X * (r_X * r_Y))) + ((((T)5230463601635901.0 / (T)9223372036854775808.0) * (r_Y * r_Y)) + (((T)5248024901994073.0 / (T)9223372036854775808.0) * (r_X * (r_Y * r_Y))))))))));
			} else {
				res = 0.0 ;
			}
		}
	} else {
		if (r_Y > r_E) {
			if (r_X <= -1*(r_E)) {
				res = ((((T)-6766907038823601.0) / (T)72057594037927936.0) + ((((T)2820352245043009.0 / (T)9007199254740992.0) * r_X) + ((((T)3707903645206677.0 / (T)18014398509481984.0) * (r_X * r_X)) + ((((T)6965963260049615.0 / (T)1152921504606846976.0) * r_Y) + ((((T)4254712697563493.0 / (T)288230376151711744.0) * (r_X * r_Y)) + ((((T)5061786573825901.0 / (T)576460752303423488.0) * (r_X * (r_X * r_Y))) - ((((T)5230463601635901.0 / (T)9223372036854775808.0) * (r_Y * r_Y)) + (((T)5248024901994073.0 / (T)9223372036854775808.0) * (r_X * (r_Y * r_Y))))))))));
			} else {
				if (r_X > r_E) {
					res = ((((T)-2733486815430287.0) / (T)36028797018963968.0) - ((((T)5410228275555705.0 / (T)18014398509481984.0) * r_X) + ((((T)6073482399877813.0 / (T)36028797018963968.0) * (r_X * r_X)) + ((((T)811604857775513.0 / (T)576460752303423488.0) * r_Y) + ((((T)1556530500332089.0 / (T)144115188075855872.0) * (r_X * r_Y)) + ((((T)4344663633352919.0 / (T)576460752303423488.0) * (r_X * (r_X * r_Y))) + ((((T)5230463601635901.0 / (T)9223372036854775808.0) * (r_Y * r_Y)) + (((T)5248024901994073.0 / (T)9223372036854775808.0) * (r_X * (r_Y * r_Y))))))))));
				} else {
					res = 0.0;
				}
			}
		} else {
			res = 0.0;
		}
	}

	return res ;

}

int main(int argc, char** argv)

{

	srand(time(0));

	FILE *fp ;
	int N;
	sscanf(argv[1], "%d", &N);
	fp = fopen("jetapprox_profile.csv", "w+");

	__float80 val_dp = 0;
	__float80 val_qp = 0;
	__float80 err_qp_dp = 0;

	__float80 maxerrdp = 0.0 ;

	for(int i=0; i<N; i++) {
		init<double>();
		__float80 val_dp = (__float80) execute_spec_precision<double>();
		__float80 val_qp = (__float80) execute_spec_precision<__float128>();

		err_qp_dp += fabs(val_qp - val_dp);

		if ( maxerrdp < fabs(val_qp - val_dp)) maxerrdp = fabs(val_qp - val_dp) ;
	}

	fclose(fp);

	cout << "Avg Error in DP -> " << err_qp_dp/N << endl ;
	cout << "Max Error in DP -> " << maxerrdp << endl ;


	return 1;

}
