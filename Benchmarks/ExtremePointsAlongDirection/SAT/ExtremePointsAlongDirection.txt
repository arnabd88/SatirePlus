#ExtremePointsAlongDirection(Vector dir, Point pt[], int n, int *imin, int *imax)

INPUTS {
	
	dirx fl64 :	(-3.0 - 0.1,3.0 + 0.1);
	diry fl64 :	(4.0 - 0.1,4.0 + 0.1);
	dirz fl64 :	(4.0 - 0.1,4.0 + 0.1);

	px0 fl64  :	(1.0, 2.0);
	py0 fl64  :	(1.0, 2.0);
	pz0 fl64  :	(1.0, 2.0);
	px1 fl64  :	(2.5, 3.0);
	py1 fl64  :	(2.5, 3.0);
	pz1 fl64  :	(2.5, 3.0);
	px2 fl64  :	(2.5, 3.0);
	py2 fl64  :	(2.5, 3.0);
	pz2 fl64  :	(2.5, 3.0);
	px3 fl64  :	(3.2, 4.5);
	py3 fl64  :	(3.2, 4.5);
	pz3 fl64  :	(3.2, 4.5);
	px4 fl64  :	(0.1, 0.5);
	py4 fl64  :	(0.1, 0.5);
	pz4 fl64  :	(0.1, 0.5);
	px5 fl64  :	(9.1, 10.5);
	py5 fl64  :	(9.1, 10.5);
	pz5 fl64  :	(9.1, 10.5);
}

OUTPUTS {
	minproj ; maxproj ;
}

EXPRS {

	maxproj = 2.2250738585072014e-308 ;
	minproj = 1.7976931348623158e+308 ;

	i int = 0 ;
	proj = (px0 * dirx) + (py0 * diry) + (pz0 * dirz) ;

	if ( proj < minproj ) then
		minproj = proj ;
		imin = i ;
	endif
	if ( proj > maxproj ) then
		maxproj = proj ;
		imax = i ;
	endif



	i = i+1 ;
	proj = (px1 * dirx) + (py1 * diry) + (pz1 * dirz) ;

	if ( proj < minproj ) then
		minproj = proj ;
		imin = i ;
	endif
	if ( proj > maxproj ) then
		maxproj = proj ;
		imax = i ;
	endif



	i = i+1 ;
	proj = (px2 * dirx) + (py2 * diry) + (pz2 * dirz) ;

	if ( proj < minproj ) then
		minproj = proj ;
		imin = i ;
	endif
	if ( proj > maxproj ) then
		maxproj = proj ;
		imax = i ;
	endif




	i = i+1 ;
	proj = (px3 * dirx) + (py3 * diry) + (pz3 * dirz) ;

	if ( proj < minproj ) then
		minproj = proj ;
		imin = i ;
	endif
	if ( proj > maxproj ) then
		maxproj = proj ;
		imax = i ;
	endif





	i = i+1 ;
	proj = (px4 * dirx) + (py4 * diry) + (pz4 * dirz) ;

	if ( proj < minproj ) then
		minproj = proj ;
		imin = i ;
	endif
	if ( proj > maxproj ) then
		maxproj = proj ;
		imax = i ;
	endif


	i = i+1 ;
	proj = (px5 * dirx) + (py5 * diry) + (pz5 * dirz) ;

	if ( proj < minproj ) then
		minproj = proj ;
		imin = i ;
	endif
	if ( proj > maxproj ) then
		maxproj = proj ;
		imax = i ;
	endif
}
