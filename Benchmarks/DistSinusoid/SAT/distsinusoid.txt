

INPUTS {

	t fl64 : (0.0, 1.0);
	k1 fl64 : (0.0 , 1.0);
	k2 fl64 : (0.0, 1.0);
}

OUTPUTS {
	result ;
}

REQUIRES {
	RSC1 : ( k1 <= k2 ) ;
}

EXPRS {
	kHalfPI     = 1.570796326794896619231321 ;
	
	kHalfPIrecip = 1.0/kHalfPI ;

	f = k1*kHalfPIrecip + k2 - k1 + (1.0 - k2)*kHalfPIrecip;

	if ( t < k1) then
		result = (k1*kHalfPIrecip*(sin(t/k1*kHalfPI-kHalfPI) + 1.0))/f;
	else
		if ( t > k2 ) then
			result = (k1*kHalfPIrecip + k2 - k1 + (1.0 - k2)*kHalfPIrecip*sin(((t-k2)/(1.0-k2))*kHalfPI))/f;
		else
			result = (k1*kHalfPIrecip + t - k1)/f;
		endif
	endif

	#result = result/f ;
}
