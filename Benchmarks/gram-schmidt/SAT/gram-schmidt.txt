
INPUTS {

	Q11	fl64	:	(1.0/7.0 , 1.0);
	Q22	fl64	:	(1.0/25.0, 1.0);
	Q12	fl64	:	(0.0, 0.0);
	Q13	fl64	:	(0.0, 0.0);
	Q21 fl64	:	(0.0, 0.0);
	Q23	fl64	:	(0.0, 0.0);
	Q31	fl64	:	(1/2592, 1/2592);
	Q32	fl64	:	(1/2601, 1/2601);
	Q33	fl64	:	(1/2583, 1/2583);
}

OUTPUTS {
	temp ;
}

EXPRS  {
	eps = 0.000005;
	h1 = 0.0;
	h2 = 0.0;
	h3 = 0.0;
	qj1 = Q31;
	qj2 = Q32;
	qj3 = Q33;
	r1 = 0.0;
	r2 = 0.0;
	r3 = 0.0;
	r = (((qj1 * qj1) + (qj2 * qj2)) + (qj3 * qj3));
	rjj = 0.0;
	e = 10.0;
	rold = sqrt(r);
	temp = 0.0;
	if (e > eps) then
		h1_1 = (((Q11 * qj1) + (Q21 * qj2)) + (Q31 * qj3));
		h2_1 = (((Q12 * qj1) + (Q22 * qj2)) + (Q32 * qj3));
		h3_1 = (((Q13 * qj1) + (Q23 * qj2)) + (Q33 * qj3));
		qj1_1 = (qj1 - (((Q11 * h1_1) + (Q12 * h2_1)) + (Q13 * h3_1)));
		qj2_1 = (qj2 - (((Q21 * h1_1) + (Q22 * h2_1)) + (Q23 * h3_1)));
		qj3_1 = (qj3 - (((Q31 * h1_1) + (Q32 * h2_1)) + (Q33 * h3_1)));
		r1_1 = (r1 + h1_1);
		r2_1 = (r2 + h2_1);
		r3_1 = (r3 + h3_1);
		r_1 = (((qj1_1 * qj1_1) + (qj2_1 * qj2_1)) + (qj3_1 * qj3_1));
		rjj_1 = sqrt(r_1);
		res1 = (1.0 - (rjj_1 / rold)) ;
		if ( res1 >= 0.0) then
			e_1 = res1 ;
		else
			e_1 = -1.0*res1 ;
		endif
		rold_1 = rjj_1;
		temp_1 = 0.0;
		if (e_1 > eps) then
			h1_2 = (((Q11 * qj1_1) + (Q21 * qj2_1)) + (Q31 * qj3_1));
			h2_2 = (((Q12 * qj1_1) + (Q22 * qj2_1)) + (Q32 * qj3_1));
			h3_2 = (((Q13 * qj1_1) + (Q23 * qj2_1)) + (Q33 * qj3_1));
			qj1_2 = (qj1_1 - (((Q11 * h1_2) + (Q12 * h2_2)) + (Q13 * h3_2)));
			qj2_2 = (qj2_1 - (((Q21 * h1_2) + (Q22 * h2_2)) + (Q23 * h3_2)));
			qj3_2 = (qj3_1 - (((Q31 * h1_2) + (Q32 * h2_2)) + (Q33 * h3_2)));
			r1_2 = (r1_1 + h1_2);
			r2_2 = (r2_1 + h2_2);
			r3_2 = (r3_1 + h3_2);
			r_2 = (((qj1_2 * qj1_2) + (qj2_2 * qj2_2)) + (qj3_2 * qj3_2));
			rjj_2 = sqrt(r_2);
			#e_2 = fabsf((1.0 - (rjj_2 / rold_1)));
			res2 = ((1.0 - (rjj_2 / rold_1)));
			if ( res2 >= 0.0 ) then
				e_2 = res2 ;
			else
				e_2 = -1.0*res2 ;
			endif
			rold_2 = rjj_2;
			temp_2 = 0.0;
			if (e_2 > eps) then
				h1_3 = (((Q11 * qj1_2) + (Q21 * qj2_2)) + (Q31 * qj3_2));
				h2_3 = (((Q12 * qj1_2) + (Q22 * qj2_2)) + (Q32 * qj3_2));
				h3_3 = (((Q13 * qj1_2) + (Q23 * qj2_2)) + (Q33 * qj3_2));
				qj1_3 = (qj1_2 - (((Q11 * h1_3) + (Q12 * h2_3)) + (Q13 * h3_3)));
				qj2_3 = (qj2_2 - (((Q21 * h1_3) + (Q22 * h2_3)) + (Q23 * h3_3)));
				qj3_3 = (qj3_2 - (((Q31 * h1_3) + (Q32 * h2_3)) + (Q33 * h3_3)));
				r1_3 = (r1_2 + h1_3);
				r2_3 = (r2_2 + h2_3);
				r3_3 = (r3_2 + h3_3);
				r_3 = (((qj1_3 * qj1_3) + (qj2_3 * qj2_3)) + (qj3_3 * qj3_3));
				rjj_3 = sqrt(r_3);
				#e_3 = fabsf((1.0 - (rjj_3 / rold_2)));
				res3 = ((1.0 - (rjj_3 / rold_2)));
				if ( res3 >= 0.0 ) then
					e_3 = res3 ;
				else
					e_3 = -1.0*res3 ;
				endif
				rold_3 = rjj_3;
				temp_3 = 0.0;
				if (e_3 > eps) then
					h1_4 = (((Q11 * qj1_3) + (Q21 * qj2_3)) + (Q31 * qj3_3));
					h2_4 = (((Q12 * qj1_3) + (Q22 * qj2_3)) + (Q32 * qj3_3));
					h3_4 = (((Q13 * qj1_3) + (Q23 * qj2_3)) + (Q33 * qj3_3));
					qj1_4 = (qj1_3 - (((Q11 * h1_4) + (Q12 * h2_4)) + (Q13 * h3_4)));
					qj2_4 = (qj2_3 - (((Q21 * h1_4) + (Q22 * h2_4)) + (Q23 * h3_4)));
					qj3_4 = (qj3_3 - (((Q31 * h1_4) + (Q32 * h2_4)) + (Q33 * h3_4)));
					r1_4 = (r1_3 + h1_4);
					r2_4 = (r2_3 + h2_4);
					r3_4 = (r3_3 + h3_4);
					r_4 = (((qj1_4 * qj1_4) + (qj2_4 * qj2_4)) + (qj3_4 * qj3_4));
					rjj_4 = sqrt(r_4);
					#e_4 = fabsf((1.0 - (rjj_4 / rold_3)));
					res4 = (1.0 - (rjj_4 / rold_3));
					if (res4 >= 0.0) then
						e_4 = res4 ;
					else
						e_4 = -1.0*res4 ;
					endif
					rold_4 = rjj_4;
					temp_4 = 0.0;
					if (e_4 > eps) then
						h1_5 = (((Q11 * qj1_4) + (Q21 * qj2_4)) + (Q31 * qj3_4));
						h2_5 = (((Q12 * qj1_4) + (Q22 * qj2_4)) + (Q32 * qj3_4));
						h3_5 = (((Q13 * qj1_4) + (Q23 * qj2_4)) + (Q33 * qj3_4));
						qj1_5 = (qj1_4 - (((Q11 * h1_5) + (Q12 * h2_5)) + (Q13 * h3_5)));
						qj2_5 = (qj2_4 - (((Q21 * h1_5) + (Q22 * h2_5)) + (Q23 * h3_5)));
						qj3_5 = (qj3_4 - (((Q31 * h1_5) + (Q32 * h2_5)) + (Q33 * h3_5)));
						r1_5 = (r1_4 + h1_5);
						r2_5 = (r2_4 + h2_5);
						r3_5 = (r3_4 + h3_5);
						r_5 = (((qj1_5 * qj1_5) + (qj2_5 * qj2_5)) + (qj3_5 * qj3_5));
						rjj_5 = sqrt(r_5);
						#e_5 = fabsf((1.0 - (rjj_5 / rold_4)));
						res5 = (1.0 - (rjj_5 / rold_4)) ;
						if (res5 >= 0.0) then
							e_5 = res5 ;
						else
							e_5 = -1.0*res5 ;
						endif
						rold_5 = rjj_5;
						temp_5 = 0.0;
						if (e_5 > eps) then
							h1_6 = (((Q11 * qj1_5) + (Q21 * qj2_5)) + (Q31 * qj3_5));
							h2_6 = (((Q12 * qj1_5) + (Q22 * qj2_5)) + (Q32 * qj3_5));
							h3_6 = (((Q13 * qj1_5) + (Q23 * qj2_5)) + (Q33 * qj3_5));
							qj1_6 = (qj1_5 - (((Q11 * h1_6) + (Q12 * h2_6)) + (Q13 * h3_6)));
							qj2_6 = (qj2_5 - (((Q21 * h1_6) + (Q22 * h2_6)) + (Q23 * h3_6)));
							qj3_6 = (qj3_5 - (((Q31 * h1_6) + (Q32 * h2_6)) + (Q33 * h3_6)));
							r1_6 = (r1_5 + h1_6);
							r2_6 = (r2_5 + h2_6);
							r3_6 = (r3_5 + h3_6);
							r_6 = (((qj1_6 * qj1_6) + (qj2_6 * qj2_6)) + (qj3_6 * qj3_6));
							rjj_6 = sqrt(r_6);
							#e_6 = fabsf((1.0 - (rjj_6 / rold_5)));
							res6 = (1.0 - (rjj_6 / rold_5));
							if ( res6 >= 0.0) then
								e_6 = res6 ;
							else
								e_6 = -1.0*res6 ;
							endif
							rold_6 = rjj_6;
							temp_6 = qj1_6 ;
							if ((e_6 > eps)) then
								h1_7 = (((Q11 * qj1_6) + (Q21 * qj2_6)) + (Q31 * qj3_6));
								h2_7 = (((Q12 * qj1_6) + (Q22 * qj2_6)) + (Q32 * qj3_6));
								h3_7 = (((Q13 * qj1_6) + (Q23 * qj2_6)) + (Q33 * qj3_6));
								qj1_7 = (qj1_6 - (((Q11 * h1_7) + (Q12 * h2_7)) + (Q13 * h3_7)));
								qj2_7 = (qj2_6 - (((Q21 * h1_7) + (Q22 * h2_7)) + (Q23 * h3_7)));
								qj3_7 = (qj3_6 - (((Q31 * h1_7) + (Q32 * h2_7)) + (Q33 * h3_7)));
								r1_7 = (r1_6 + h1_7);
								r2_7 = (r2_6 + h2_7);
								r3_7 = (r3_6 + h3_7);
								r_7 = (((qj1_7 * qj1_7) + (qj2_7 * qj2_7)) + (qj3_7 * qj3_7));
								rjj_7 = sqrt(r_7);
								#e_7 = fabsf((1.0 - (rjj_7 / rold_6)));
								res7 = (1.0 - (rjj_7 / rold_6));
								if ( res7 >= 0.0 ) then
									e_7 = res7 ;
								else
									e_7 = -1.0*res7 ;
								endif
								rold_7 = rjj_7;
								temp_7=  qj1_7;
								if (e_7 > eps) then
									h1_8 = (((Q11 * qj1_7) + (Q21 * qj2_7)) + (Q31 * qj3_7));
									h2_8 = (((Q12 * qj1_7) + (Q22 * qj2_7)) + (Q32 * qj3_7));
									h3_8 = (((Q13 * qj1_7) + (Q23 * qj2_7)) + (Q33 * qj3_7));
									qj1_8 = (qj1_7 - (((Q11 * h1_8) + (Q12 * h2_8)) + (Q13 * h3_8)));
									qj2_8 = (qj2_7 - (((Q21 * h1_8) + (Q22 * h2_8)) + (Q23 * h3_8)));
									qj3_8 = (qj3_7 - (((Q31 * h1_8) + (Q32 * h2_8)) + (Q33 * h3_8)));
									r1_8 = (r1_7 + h1_8);
									r2_8 = (r2_7 + h2_8);
									r3_8 = (r3_7 + h3_8);
									r_8 = (((qj1_8 * qj1_8) + (qj2_8 * qj2_8)) + (qj3_8 * qj3_8));
									rjj_8 = sqrt(r_8);
									#e_8 = fabsf((1.0 - (rjj_8 / rold_7)));
									res8 = (1.0 - (rjj_8 / rold_7));
									if ( res8 >= 0.0) then
										e_8 = res8 ;
									else
										e_8 = -1.0*res8 ;
									endif
									rold_8 = rjj_8;
									temp_8 = qj1_8;
									if (e_8 > eps) then
										h1_9 = (((Q11 * qj1_8) + (Q21 * qj2_8)) + (Q31 * qj3_8));
										h2_9 = (((Q12 * qj1_8) + (Q22 * qj2_8)) + (Q32 * qj3_8));
										h3_9 = (((Q13 * qj1_8) + (Q23 * qj2_8)) + (Q33 * qj3_8));
										qj1_9 = (qj1_8 - (((Q11 * h1_9) + (Q12 * h2_9)) + (Q13 * h3_9)));
										qj2_9 = (qj2_8 - (((Q21 * h1_9) + (Q22 * h2_9)) + (Q23 * h3_9)));
										qj3_9 = (qj3_8 - (((Q31 * h1_9) + (Q32 * h2_9)) + (Q33 * h3_9)));
										r1_9 = (r1_8 + h1_9);
										r2_9 = (r2_8 + h2_9);
										r3_9 = (r3_8 + h3_9);
										r_9 = (((qj1_9 * qj1_9) + (qj2_9 * qj2_9)) + (qj3_9 * qj3_9));
										rjj_9 = sqrt(r_9);
										#e_9 = fabsf((1.0 - (rjj_9 / rold_8)));
										res9 = (1.0 - (rjj_9 / rold_8));
										if ( res9 >= 0.0 ) then
											e_9 = res9 ;
										else
											e_9 = -1.0*res9 ;
										endif
										rold_9 = rjj_9;
										temp_9 = qj1_9;
										if (e_9 > eps) then
											h1_10 = (((Q11 * qj1_9) + (Q21 * qj2_9)) + (Q31 * qj3_9));
											h2_10 = (((Q12 * qj1_9) + (Q22 * qj2_9)) + (Q32 * qj3_9));
											h3_10 = (((Q13 * qj1_9) + (Q23 * qj2_9)) + (Q33 * qj3_9));
											qj1_10 = (qj1_9 - (((Q11 * h1_9) + (Q12 * h2_9)) + (Q13 * h3_9)));
											qj2_10 = (qj2_9 - (((Q21 * h1_9) + (Q22 * h2_9)) + (Q23 * h3_9)));
											qj3_10 = (qj3_9 - (((Q31 * h1_9) + (Q32 * h2_9)) + (Q33 * h3_9)));
											r1_10 = (r1_9 + h1_9);
											r2_10 = (r2_9 + h2_9);
											r3_10 = (r3_9 + h3_9);
											r_10 = (((qj1_9 * qj1_9) + (qj2_9 * qj2_9)) + (qj3_9 * qj3_9));
											temp_9 = qj1_10;
										else
											temp_9 = qj1_9;
										endif
										temp_8 = temp_9;
									else
										temp_8 = qj1_8;
									endif
									temp_7 = temp_8;
								else
									temp_7 = qj1_7;
								endif
								temp_6 = temp_7;
							else
								temp_6 = qj1_6;
							endif
							temp_5 = temp_6;
						 else
							temp_5 = qj1_5;
						endif
						temp_4 = temp_5;
					 else
						temp_4 = qj1_4;
					endif
					temp_3 = temp_4;
				 else
					temp_3 = qj1_3;
				endif
				temp_2 = temp_3;
			 else
				temp_2 = qj1_2;
			endif
			temp_1 = temp_2;
		 else
			temp_1 = qj1_1;
		endif
		temp = temp_1;
	 else
		temp = qj1;
	endif
	#return temp;
}

