
INPUTS {

	Q11	fl64	:	(1.0/7.0 , 1.0);
	Q22	fl64	:	(1.0/25.0, 1.0);
	Q12	fl64	:	(0.0, 0.0);
	Q13	fl64	:	(0.0, 0.0);
	Q21 fl64	:	(0.0, 0.0);
	Q23	fl64	:	(0.0, 0.0);
	Q31	fl64	:	(1/2592, 1/2592);
	Q32	fl64	:	(1/2601, 1/2601);
	Q33	fl64	:	(1/2583, 1/2583);
}

OUTPUTS {
	temp ;
}

EXPRS {
	eps = 0.000005;
	h1 = 0.0;
	h2 = 0.0;
	h3 = 0.0;
	qj1 = Q31;
	qj2 = Q32;
	qj3 = Q33;
	r1 = 0.0;
	r2 = 0.0;
	r3 = 0.0;
	r = (((qj1 * qj1) + (qj2 * qj2)) + (qj3 * qj3));
	rjj = 0.0;
	e = 10.0;
	rold = sqrt(r);
	temp = 0.0;
	if (e > eps) then
		h1_1 = (((Q11 * qj1) + (Q21 * qj2)) + (Q31 * qj3));
		h2_1 = (((Q12 * qj1) + (Q22 * qj2)) + (Q32 * qj3));
		h3_1 = (((Q13 * qj1) + (Q23 * qj2)) + (Q33 * qj3));
		qj1_1 = (qj1 - (((Q11 * h1_1) + (Q12 * h2_1)) + (Q13 * h3_1)));
		qj2_1 = (qj2 - (((Q21 * h1_1) + (Q22 * h2_1)) + (Q23 * h3_1)));
		qj3_1 = (qj3 - (((Q31 * h1_1) + (Q32 * h2_1)) + (Q33 * h3_1)));
		r1_1 = (r1 + h1_1);
		r2_1 = (r2 + h2_1);
		r3_1 = (r3 + h3_1);
		r_1 = (((qj1_1 * qj1_1) + (qj2_1 * qj2_1)) + (qj3_1 * qj3_1));
		rjj_1 = sqrt(r_1);
		res1 = (1.0 - (rjj_1 / rold)) ;
		if ( res1 >= 0.0) then
			e_1 = res1 ;
		else
			e_1 = -1*res1 ;
		endif
		rold_1 = rjj_1;
		temp_1 = 0.0;
		if (e_1 > eps) then
			h1_2 = (((Q11 * qj1_1) + (Q21 * qj2_1)) + (Q31 * qj3_1));
			h2_2 = (((Q12 * qj1_1) + (Q22 * qj2_1)) + (Q32 * qj3_1));
			h3_2 = (((Q13 * qj1_1) + (Q23 * qj2_1)) + (Q33 * qj3_1));
			qj1_2 = (qj1_1 - (((Q11 * h1_2) + (Q12 * h2_2)) + (Q13 * h3_2)));
			qj2_2 = (qj2_1 - (((Q21 * h1_2) + (Q22 * h2_2)) + (Q23 * h3_2)));
			qj3_2 = (qj3_1 - (((Q31 * h1_2) + (Q32 * h2_2)) + (Q33 * h3_2)));
			r1_2 = (r1_1 + h1_2);
			r2_2 = (r2_1 + h2_2);
			r3_2 = (r3_1 + h3_2);
			r_2 = (((qj1_2 * qj1_2) + (qj2_2 * qj2_2)) + (qj3_2 * qj3_2));
			rjj_2 = sqrt(r_2);
			#e_2 = fabsf((1.0 - (rjj_2 / rold_1)));
			res2 = ((1.0 - (rjj_2 / rold_1)));
			if ( res2 >= 0.0 ) then
				e_2 = res2 ;
			else
				e_2 = -1*res2 ;
			endif
			rold_2 = rjj_2;
			temp_2 = 0.0;
			if (e_2 > eps) then
				h1_3 = (((Q11 * qj1_2) + (Q21 * qj2_2)) + (Q31 * qj3_2));
				h2_3 = (((Q12 * qj1_2) + (Q22 * qj2_2)) + (Q32 * qj3_2));
				h3_3 = (((Q13 * qj1_2) + (Q23 * qj2_2)) + (Q33 * qj3_2));
				qj1_3 = (qj1_2 - (((Q11 * h1_3) + (Q12 * h2_3)) + (Q13 * h3_3)));
				qj2_3 = (qj2_2 - (((Q21 * h1_3) + (Q22 * h2_3)) + (Q23 * h3_3)));
				qj3_3 = (qj3_2 - (((Q31 * h1_3) + (Q32 * h2_3)) + (Q33 * h3_3)));
				r1_3 = (r1_2 + h1_3);
				r2_3 = (r2_2 + h2_3);
				r3_3 = (r3_2 + h3_3);
				r_3 = (((qj1_3 * qj1_3) + (qj2_3 * qj2_3)) + (qj3_3 * qj3_3));
				rjj_3 = sqrt(r_3);
				#e_3 = fabsf((1.0 - (rjj_3 / rold_2)));
				res3 = ((1.0 - (rjj_3 / rold_2)));
				if ( res3 >= 0.0 ) then
					e_3 = res3 ;
				else
					e_3 = -1*res3 ;
				endif
				rold_3 = rjj_3;
				temp_2 = qj1_3;
			 else 
				temp_2 = qj1_2;
			endif
			temp_1 = temp_2;
		 else 
			temp_1 = qj1_1;
		endif
		temp = temp_1;
	 else 
		temp = qj1;
	endif
	#return temp;
}
